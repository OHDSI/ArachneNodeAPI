spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/datanode
build:
  number: no_build_number
  id: no_build_id
datanode:
  arachneCentral:
    host: https://localhost
    port: 8080
  jwt:
    expiration: 604800
swagger:
  enable: true
executionEngine:
  host: localhost
docker:
  host: unix:///var/run/docker.sock
atlas:
  auth:
    schema: DATABASE
    username: admin@odysseusinc.com
    password: ENC(ScVtM/zv348iHQ3b+zZHytAiOcU+DbY2)
  scheduler:
      checkInterval: 10000
entities:
  scheduler:
    checkListRequestsInterval: 1000
    checkRequestInterval: 1000
cohorts:
  result:
    countEnabled: true
    summaryEnabled: true
analysis:
  scheduler:
    resendFailuresInterval: 60000
    invalidateExecutingInterval: 120000


authenticator:
  methods:
    rest-central:
      service: org.ohdsi.authenticator.service.rest.RestAuthService
      config:
        url: https://localhost:8080/api/v1/auth/login
        bodyFormat: JSON
        params:
          username: username
          password: password
        loginSuccessCriteria:
          status: OK
          bodyProperty: '$[?(@.errorCode == 0)]'
        token:
          source: BODY
          key: $.result.token
          targetHeader: Arachne-Auth-Token
          targetFormat: '%s'
          copyExpirationDate: true
        infoUrl: https://localhost:8080/api/v1/auth/me
        fieldsToExtract:
          id: $.result.id
          email: $.result.email
          username: $.result.username
          firstName: $.result.firstname
          middleName: $.result.middlename
          lastName: $.result.lastname
security.method: rest-central
security.jwt.token.secretKey: ${datanode.jwt.secret}
security.jwt.token.validityInSeconds: ${datanode.jwt.expiration}
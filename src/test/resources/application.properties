# suppress inspection "SpringBootApplicationProperties" for whole file
logging.level.*=INFO
#portal.url=http://test.arachnenetwork.com
server.port=8880
server.ssl.strictMode=false
flyway.datasource.driverClassName=org.postgresql.Driver
flyway.datasource.url=jdbc:postgresql://127.0.0.1:5433/datanode
flyway.datasource.username=ohdsi
flyway.datasource.password=ohdsi
flyway.out-of-order=true

spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.connection.CharSet=utf8
spring.jpa.hibernate.connection.characterEncoding=utf8
spring.jpa.hibernate.connection.useUnicode=true
spring.datasource.url=jdbc:postgresql://127.0.0.1:5433/datanode
spring.datasource.username=ohdsi
spring.datasource.password=ohdsi
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.connection-test-query=select 1

api.loginEnteryPoint: /api/v1/auth/login
api.logoutEntryPoint: /api/v1/auth/logout
api.registerEntryPoint: /api/v1/auth/register

spring.datasource.max-active=400
arachne.token.header=Arachne-Auth-Token
datanode.arachneCentral.nodeAuthHeader=Arachne-System-Token

spring.mvc.view.prefix=/
spring.mvc.view.suffix=.html
build.number=@build.number@
build.id=no_build_id
project.version=@project.version@
#ms
files.store.path=/tmp
spring.http.multipart.max-file-size=128MB
spring.http.multipart.max-request-size=128MB

datanode.app.errorsTokenEnabled=false
datanode.jwt.header=Arachne-Auth-Token
datanode.jwt.secret=129DF19C8A91AFD8375A2826A3353
datanode.jwt.expiration=604800
datanode.arachneCentral.admin.email=aleksandr.krutov@odysseusinc.com
datanode.arachneCentral.host=https://test.arachnenetwork.com
datanode.arachneCentral.port=443
datanode.arachneCentral.authHeader=Arachne-Auth-Token
datanode.baseURL: http://odysseusovh03.odysseusinc.com
datanode.port: 8880
datanode.healthcheck.period=60000
datanode.checkForRequestsPeriod=10000
datanode.httpClient.connectTimeout=60
datanode.httpClient.writeTimeout=60
datanode.httpClient.readTimeout=60

swagger.enable=true

analysis.file.maxsize=1048576
analysis.scheduler.resendFailuresInterval=600000
analysis.scheduler.invalidateExecutingInterval=3600000
analysis.scheduler.invalidateMaxDaysExecutingInterval=3

executionEngine.protocol=http
executionEngine.host=odysseusovh02.odysseusinc.com
executionEngine.port=8888
executionEngine.analysisUri=/api/v1/analyze
executionEngine.token=

proxy.enabled=false
proxy.enabledForEngine=false
proxy.host=91.225.130.20
proxy.port=808
proxy.auth.enabled=false
proxy.auth.username=user
proxy.auth.password=Password1234

docker.host=unix:///var/run/docker.sock
docker.tls-verify=false
docker.registry.host=hub.arachnenetwork.com
docker.registry.username=user
docker.registry.password=user

achilles.image-name=hub.arachnenetwork.com/achilles:latest
achilles.network-mode=host
achilles.auth-config.registry-address=hub.arachnenetwork.com
achilles.auth-config.username=user
achilles.auth-config.password=user
achilles.retry.max-attempts=5
achilles.retry.backoff.max-interval=50000

atlas.host=http://127.0.0.1
atlas.port=8088
atlas.urlContext=WebAPI
atlas.scheduler.checkInterval=10000
atlas.auth.schema=NONE
atlas.auth.username=
atlas.auth.password=

cohorts.result.countEnabled=true
cohorts.result.summaryEnabled=true
cohorts.result.defaultTargetTable=cohort

migration.retry.timeout=10000
jasypt.encryptor.database.algorithm=PBEWITHMD5ANDTRIPLEDES
tmp.holder.cron=0 0 6 * * ?
submission.result.files.exclusions=**/bigquery/**,**/netezza/**,**/impala/**

authenticator.user.registrationStrategy: CREATE_IF_FIRST
authenticator.methods.db.service=org.ohdsi.authenticator.service.jdbc.JdbcAuthService
authenticator.methods.db.config.jdbcUrl=jdbc:postgresql://127.0.0.1:5433/datanode
authenticator.methods.db.config.username=ohdsi
authenticator.methods.db.config.password=ohdsi
authenticator.methods.db.config.query="select password, id, firstname, lastname, email from users_data where lower(email)=lower(:username)"
authenticator.methods.db.config.passwordEncoder=org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
authenticator.methods.db.config.fieldsToExtract.firstName=firstname
authenticator.methods.db.config.fieldsToExtract.lastName=lastname
authenticator.methods.db.config.fieldsToExtract.email=email
security.method=db
security.jwt.token.secretKey: ${datanode.jwt.secret}
security.jwt.token.validityInSeconds: ${datanode.jwt.expiration}
datanode.runMode=NETWORK

datanode.checkDataSourceTimeout=45000